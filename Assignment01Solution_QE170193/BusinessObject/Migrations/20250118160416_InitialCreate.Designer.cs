// <auto-generated />
using System;
using BusinessObjects;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessObject.Migrations
{
    [DbContext(typeof(EstoreDbContext))]
    [Migration("20250118160416_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessObject.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Gaming Laptops",
                            Description = "Laptops designed for gaming"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Business Laptops",
                            Description = "Laptops suitable for business use"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Ultrabooks",
                            Description = "Thin and lightweight laptops"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Accessories",
                            Description = "Various laptop accessories"
                        });
                });

            modelBuilder.Entity("BusinessObject.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("MemberId");

                    b.ToTable("Member");

                    b.HasData(
                        new
                        {
                            MemberId = 1,
                            City = "Quy Nhon",
                            Country = "Viet Nam",
                            DateOfBirth = new DateTime(2025, 1, 18, 16, 4, 16, 600, DateTimeKind.Utc).AddTicks(5926),
                            Email = "sangtnqe170193@fpt.edu.vn",
                            MemberName = "Sang Tran Ngoc",
                            Password = "123456",
                            Role = "Admin",
                            Status = 1
                        },
                        new
                        {
                            MemberId = 2,
                            City = "Gia Lai",
                            Country = "Viet Nam",
                            DateOfBirth = new DateTime(2025, 1, 18, 16, 4, 16, 600, DateTimeKind.Utc).AddTicks(5929),
                            Email = "quynxqe170239@fpt.edu.vn",
                            MemberName = "Quy Nguyen Xuan",
                            Password = "123456",
                            Role = "Member",
                            Status = 1
                        });
                });

            modelBuilder.Entity("BusinessObject.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("Freight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId");

                    b.HasIndex("MemberId");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            Freight = "COD",
                            MemberId = 1,
                            OrderDate = new DateTime(2025, 1, 18, 23, 4, 16, 600, DateTimeKind.Local).AddTicks(5957),
                            OrderStatus = 1,
                            ShippedDate = new DateTime(2025, 1, 18, 23, 4, 16, 600, DateTimeKind.Local).AddTicks(5969),
                            Total = 5300m
                        });
                });

            modelBuilder.Entity("BusinessObject.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ProductId = 1,
                            Discount = 0m,
                            Quantity = 1,
                            UnitPrice = 2800m
                        },
                        new
                        {
                            OrderId = 1,
                            ProductId = 2,
                            Discount = 0m,
                            Quantity = 1,
                            UnitPrice = 2500m
                        });
                });

            modelBuilder.Entity("BusinessObject.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("ProductStatus")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnitsInStock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Description = "Affordable gaming laptop with great performance.",
                            ProductName = "Acer Nitro 5",
                            ProductStatus = 1,
                            SupplierId = 1,
                            UnitPrice = 2800m,
                            UnitsInStock = 35
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            Description = "High-end gaming laptop with powerful specs.",
                            ProductName = "Asus ROG Zephyrus",
                            ProductStatus = 1,
                            SupplierId = 2,
                            UnitPrice = 2500m,
                            UnitsInStock = 15
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 3,
                            Description = "Compact ultrabook with stunning display.",
                            ProductName = "Dell XPS 13",
                            ProductStatus = 1,
                            SupplierId = 3,
                            UnitPrice = 1200m,
                            UnitsInStock = 25
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 2,
                            Description = "Versatile 2-in-1 laptop for professionals.",
                            ProductName = "HP Spectre x360",
                            ProductStatus = 1,
                            SupplierId = 4,
                            UnitPrice = 1500m,
                            UnitsInStock = 20
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 4,
                            Description = "Ergonomic wireless mouse for laptops.",
                            ProductName = "Logitech Wireless Mouse",
                            ProductStatus = 1,
                            SupplierId = 1,
                            UnitPrice = 500m,
                            UnitsInStock = 200
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 4,
                            Description = "Adjustable laptop stand for better ergonomics.",
                            ProductName = "Laptop Stand",
                            ProductStatus = 1,
                            SupplierId = 2,
                            UnitPrice = 500m,
                            UnitsInStock = 150
                        });
                });

            modelBuilder.Entity("BusinessObject.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("SupplierAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("SupplierId");

                    b.ToTable("Supplier");

                    b.HasData(
                        new
                        {
                            SupplierId = 1,
                            SupplierAddress = "123 Tech Rd, Silicon Valley",
                            SupplierName = "Tech Haven",
                            Telephone = "0123456789"
                        },
                        new
                        {
                            SupplierId = 2,
                            SupplierAddress = "456 Innovation Ave, New York",
                            SupplierName = "Gadget Central",
                            Telephone = "0987654321"
                        },
                        new
                        {
                            SupplierId = 3,
                            SupplierAddress = "789 Electronic St, San Francisco",
                            SupplierName = "Electro Store",
                            Telephone = "1112223333"
                        },
                        new
                        {
                            SupplierId = 4,
                            SupplierAddress = "321 Digital Blvd, Los Angeles",
                            SupplierName = "Digital World",
                            Telephone = "2223334444"
                        });
                });

            modelBuilder.Entity("BusinessObject.Order", b =>
                {
                    b.HasOne("BusinessObject.Member", "Member")
                        .WithMany("Orders")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("BusinessObject.OrderDetail", b =>
                {
                    b.HasOne("BusinessObject.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObject.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BusinessObject.Product", b =>
                {
                    b.HasOne("BusinessObject.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObject.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("BusinessObject.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BusinessObject.Member", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusinessObject.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("BusinessObject.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("BusinessObject.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
